# Run NGINX as the nginx user
user nginx;

# Auto-detect number of CPU cores and create one worker per core
worker_processes auto;

# Specify error log location and level
error_log /var/log/nginx/error.log warn;

# File to store the process ID of the main process
pid /var/run/nginx.pid;

# Configuration for connection processing
events {
    # Maximum number of simultaneous connections that can be opened by a worker process
    worker_connections 1024;
}

# Main HTTP server configuration
http {
    # Include MIME types
    include /etc/nginx/mime.types;
    # Set default MIME type
    default_type application/octet-stream;

    # Define log format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    # Specify access log location and format
    access_log /var/log/nginx/access.log main;

    # Enable sendfile for faster file transfers
    sendfile on;
    # Optimize sendfile packets
    tcp_nopush on;
    tcp_nodelay on;
    # Connection timeout
    keepalive_timeout 65;
    # Increase hash table size
    types_hash_max_size 2048;

    # SSL configuration
    # Only allow TLS 1.2 and 1.3 as per project requirements
    ssl_protocols TLSv1.2 TLSv1.3;
    # Prefer server ciphers over client ciphers
    ssl_prefer_server_ciphers on;
    # Specify allowed ciphers
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

    # Server block for HTTPS
    server {
        # Listen on port 443 for SSL connections
        listen 443 ssl;
        # Specify server name (replace with your domain)
        server_name localhost;

        # SSL certificate files
        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;

        # Root directory for serving files
        root /var/www/html;
        # Default index file
        index index.php;

        # Main location block
        location / {
            # Try finding the file directly, then as a directory, then route through index.php
            try_files $uri $uri/ /index.php$is_args$args;
        }

        # PHP processing block
        location ~ \.php$ {
            # Split path info from filename
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            # Pass PHP requests to the WordPress container
            fastcgi_pass wordpress:9000;
            # Specify the default index file
            fastcgi_index index.php;
            # Include standard FastCGI parameters
            include fastcgi_params;
            # Set the script filename for PHP
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            # Set the path info for PHP
            fastcgi_param PATH_INFO $fastcgi_path_info;
        }

        # Deny access to .htaccess files
        location ~ /\.ht {
            deny all;
        }
    }
}